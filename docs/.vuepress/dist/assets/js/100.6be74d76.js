(window.webpackJsonp=window.webpackJsonp||[]).push([[100],{739:function(e,t,a){"use strict";a.r(t);var n=a(4),o=Object(n.a)({},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"page-frontmatter-title"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#page-frontmatter-title","aria-hidden":"true"}},[e._v("#")]),e._v(" "+e._s(e.$page.frontmatter.title))]),e._v(" "),a("p",[a("em",[e._v("Why is LaTeX better than word processors?  Experience of a dissertation-writing (synthetic) chemist.")])]),e._v(" "),a("LaTeX",{attrs:{formula:"\\mathrm{\\LaTeX}",inline:""}}),e._v(" is the tool-of-choice for writing in math, physics, and engineering.  Chemists (particularly synthetic chemists) tend to use word processors (_e.g._, Word_)_ for their manuscripts, out of habit and not consciously choosing among alteratives.  Over the past 4 months I've transitioned to writing in "),a("LaTeX",{attrs:{formula:"\\mathrm{\\LaTeX}",inline:""}}),e._v(", and others' experience helped tremendously.  This series of posts charts the toe-holds I found; hopefully they will be of help in you scaling the learning curve.\n"),a("p",[e._v("Why "),a("LaTeX",{attrs:{formula:"\\mathrm{\\LaTeX}",inline:""}}),e._v("?  People choose "),a("LaTeX",{attrs:{formula:"\\mathrm{\\LaTeX}",inline:""}}),e._v(" over a word processor for different reasons.  For me, the single reason for converting is that "),a("strong",[a("LaTeX",{attrs:{formula:"\\mathrm{\\LaTeX}",inline:""}}),e._v(" scales well for large works")],1),e._v(".   Here are several unpleasantries common to the MSc theses I've edited, and how writing in "),a("LaTeX",{attrs:{formula:"\\mathrm{\\LaTeX}",inline:""}}),e._v(" helps avoid them at first place:")],1),e._v(" "),a("ul",[a("li",[a("em",[e._v("200+Mb documents, grainy images")]),e._v(".  Scientific writing are full of graphics --- figures, schemes, spectra$latex cdots$ and the most common way of handling this to embed our best resolution .tiff.  This results in a gigantic document that is slow to open, sluggish to save, and madly crash-prone.  On the other hand, a "),a("LaTeX",{attrs:{formula:"\\mathrm{\\LaTeX}",inline:""}}),e._v(" document can be thought of as a control structure (more on this later when we talk about how "),a("LaTeX",{attrs:{formula:"\\mathrm{\\LaTeX}",inline:""}}),e._v(" works).  The workflow "),a("em",[e._v("enforces")]),e._v(" linking with external images, and encourages using resolution-independent "),a("em",[e._v(".eps")]),e._v(" and "),a("em",[e._v(".pdf")]),e._v(".  The outcome is happy writing and crisp, beautiful prints.")],1),e._v(" "),a("li",[a("em",[e._v("Illogical, ugly layout")]),e._v(".  In manuscripts generated by word processors, I often see tables that are split across pages, or a lonely section heading placed at the bottom of the page, stranded from the main text on the next.  "),a("LaTeX",{attrs:{formula:"\\mathrm{\\LaTeX}",inline:""}}),e._v('\'s typeset algorithm heavily penalize these "badness", and I have yet to see them occur even when I try to push the boundaries.')],1),e._v(" "),a("li",[a("em",[e._v("Poor support for multiple documents")]),e._v('.  Word processors generally allow for master document that links in child documents (e.g., chapters).  In all the manuscripts I\'ve seen that use this (often to combat the large file-size mentioned above), they fall apart at the seams in subtle ways.  Many of them are related to automatic numbering (of pages, figures, schemes, equations) and cross-referencing (by master document, or between child documents).  Some of them have to do with incompatible styles of text.  Almost all failing are mysterious and unique,with haphazard hacks to make it "look right for now".  '),a("LaTeX",{attrs:{formula:"\\mathrm{\\LaTeX}",inline:""}}),e._v(" supports usage of multiple documents very well - it just "),a("em",[e._v("works")]),e._v("!")],1),e._v(" "),a("li",[a("em",[e._v("Static documents.")]),e._v(' Word processed documents are static pieces of work.  They don\'t "change" (they '),a("em",[e._v("can't_change")]),e._v(")_, and neither do their embedded content.  "),a("LaTeX",{attrs:{formula:"\\mathrm{\\LaTeX}",inline:""}}),e._v(' is extensible, and it can be extended to process content "on the fly".  For example, '),a("LaTeX",{attrs:{formula:"\\mathrm{\\LaTeX}",inline:""}}),e._v(" can be instructed to open up the linked images, search for a piece of text, replace it, and use that new tag for cross-referencing in the text (I use this feature for automatic number of compounds - a tremendous boon in a review paper with >130 compounds).  It can also look up information from an external database and create fresh tables and content in your manuscript every time you typeset the document.  It's magical.")],1)]),e._v(" "),a("p",[e._v("That said, "),a("LaTeX",{attrs:{formula:"\\mathrm{\\LaTeX}",inline:""}}),e._v(" is not all fun and joy: it gives a great amount of transparency and control to the user, and this can feel overwhelming at the beginning.  In part 2, we'll talk about how "),a("LaTeX",{attrs:{formula:"\\mathrm{\\LaTeX}",inline:""}}),e._v(" work, and that should give you a sense of whether it is for you or not.  Part 3 talks about installing "),a("LaTeX",{attrs:{formula:"\\mathrm{\\LaTeX}",inline:""}}),e._v(" on your machine, and useful resources on the internet.  In part 4, we'll start with your first "),a("LaTeX",{attrs:{formula:"\\mathrm{\\LaTeX}",inline:""}}),e._v(" document, and build up to an interlinked document.  Part 5 is a specialized part for extended features.")],1)],1)},[],!1,null,null,null);t.default=o.exports}}]);